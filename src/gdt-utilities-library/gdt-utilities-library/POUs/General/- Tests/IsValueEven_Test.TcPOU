<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="IsValueEven_Test" Id="{2d060640-842e-4cab-96ce-8ccd00836465}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'hide'}
FUNCTION_BLOCK IsValueEven_Test EXTENDS TcUnit.FB_TestSuite
]]></Declaration>
    <Implementation>
      <ST><![CDATA[EvenUSINTReturnsTrue();
EvenUINTReturnsTrue();
EvenUDINTReturnsTrue();
EvenULINTReturnsTrue();
EvenSINTReturnsTrue();
EvenINTReturnsTrue();
EvenDINTReturnsTrue();
EvenLINTReturnsTrue();
OddUSINTReturnsFalse();
OddUINTReturnsFalse();
OddUDINTReturnsFalse();
OddULINTReturnsFalse();
OddSINTReturnsFalse();
OddINTReturnsFalse();
OddDINTReturnsFalse();
OddLINTReturnsFalse();
]]></ST>
    </Implementation>
    <Method Name="EvenDINTReturnsTrue" Id="{9227ff4a-9a21-43fa-b594-99401576c53d}">
      <Declaration><![CDATA[METHOD EvenDINTReturnsTrue
VAR
	result : BOOL;
	value : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EvenDINTReturnsTrue');

// @TEST-FIXTURE
value := DINT#2;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertTrue(Condition := result,
           Message := 'Even DINT did not return TRUE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EvenINTReturnsTrue" Id="{6a7d083b-4b34-40e4-a63f-487e7e1dd06f}">
      <Declaration><![CDATA[METHOD EvenINTReturnsTrue
VAR
	result : BOOL;
	value : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EvenINTReturnsTrue');

// @TEST-FIXTURE
value := INT#2;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertTrue(Condition := result,
           Message := 'Even INT did not return TRUE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EvenLINTReturnsTrue" Id="{a12a6861-5689-4889-891d-10746982f281}">
      <Declaration><![CDATA[METHOD EvenLINTReturnsTrue
VAR
	result : BOOL;
	value : LINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EvenLINTReturnsTrue');

// @TEST-FIXTURE
value := LINT#2;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertTrue(Condition := result,
           Message := 'Even LINT did not return TRUE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EvenSINTReturnsTrue" Id="{6589d0fa-657f-4aa9-a67c-896e9699418e}">
      <Declaration><![CDATA[METHOD EvenSINTReturnsTrue
VAR
	result : BOOL;
	value : SINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EvenSINTReturnsTrue');

// @TEST-FIXTURE
value := SINT#2;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertTrue(Condition := result,
           Message := 'Even SINT did not return TRUE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EvenUDINTReturnsTrue" Id="{b9125cbc-8a65-4f3c-8642-211bb1877620}">
      <Declaration><![CDATA[METHOD EvenUDINTReturnsTrue
VAR
	result : BOOL;
	value : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EvenUDINTReturnsTrue');

// @TEST-FIXTURE
value := UDINT#2;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertTrue(Condition := result,
           Message := 'Even UDINT did not return TRUE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EvenUINTReturnsTrue" Id="{c0fbafea-8ee7-4939-bbfa-795ae07dc9a9}">
      <Declaration><![CDATA[METHOD EvenUINTReturnsTrue
VAR
	result : BOOL;
	value : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EvenUINTReturnsTrue');

// @TEST-FIXTURE
value := UINT#2;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertTrue(Condition := result,
           Message := 'Even UINT did not return TRUE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EvenULINTReturnsTrue" Id="{1f688b0b-e5ad-4358-a667-dc0df94cfc22}">
      <Declaration><![CDATA[METHOD EvenULINTReturnsTrue
VAR
	result : BOOL;
	value : ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EvenULINTReturnsTrue');

// @TEST-FIXTURE
value := ULINT#2;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertTrue(Condition := result,
           Message := 'Even ULINT did not return TRUE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EvenUSINTReturnsTrue" Id="{e2a67179-c219-470f-a863-1b771aa5cdf2}">
      <Declaration><![CDATA[METHOD EvenUSINTReturnsTrue
VAR
	result : BOOL;
	value : USINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('EvenUSINTReturnsTrue');

// @TEST-FIXTURE
value := USINT#2;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertTrue(Condition := result,
           Message := 'Even USINT did not return TRUE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OddDINTReturnsFalse" Id="{e6ab6e8a-6aeb-42c2-a865-ce5a2d7ce825}">
      <Declaration><![CDATA[METHOD OddDINTReturnsFalse
VAR
	result : BOOL;
	value : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('OddDINTReturnsFalse');

// @TEST-FIXTURE
value := DINT#1;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertFalse(Condition := result,
           Message := 'Odd DINT did not return FALSE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OddINTReturnsFalse" Id="{5c3a758e-375e-447d-acbf-5bc707cdc54d}">
      <Declaration><![CDATA[METHOD OddINTReturnsFalse
VAR
	result : BOOL;
	value : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('OddINTReturnsFalse');

// @TEST-FIXTURE
value := INT#1;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertFalse(Condition := result,
           Message := 'Odd INT did not return FALSE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OddLINTReturnsFalse" Id="{bb85558c-9ff4-4aff-b7f4-def1315af1c2}">
      <Declaration><![CDATA[METHOD OddLINTReturnsFalse
VAR
	result : BOOL;
	value : LINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('OddLINTReturnsFalse');

// @TEST-FIXTURE
value := LINT#1;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertFalse(Condition := result,
           Message := 'Odd LINT did not return FALSE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OddSINTReturnsFalse" Id="{fad614b6-3821-427f-8f53-7f7b944004c9}">
      <Declaration><![CDATA[METHOD OddSINTReturnsFalse
VAR
	result : BOOL;
	value : SINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('OddSINTReturnsFalse');

// @TEST-FIXTURE
value := SINT#1;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertFalse(Condition := result,
           Message := 'Odd SINT did not return FALSE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OddUDINTReturnsFalse" Id="{97a67a33-b543-4f8c-81e3-583111370ffc}">
      <Declaration><![CDATA[METHOD OddUDINTReturnsFalse
VAR
	result : BOOL;
	value : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('OddUDINTReturnsFalse');

// @TEST-FIXTURE
value := UDINT#1;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertFalse(Condition := result,
           Message := 'Odd UDINT did not return FALSE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OddUINTReturnsFalse" Id="{5bb6a7ea-ae99-4898-b863-50f0eb74e8d4}">
      <Declaration><![CDATA[METHOD OddUINTReturnsFalse
VAR
	result : BOOL;
	value : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('OddUINTReturnsFalse');

// @TEST-FIXTURE
value := UINT#1;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertFalse(Condition := result,
           Message := 'Odd UINT did not return FALSE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OddULINTReturnsFalse" Id="{09c50642-38c0-4129-aa7a-45b6148a1097}">
      <Declaration><![CDATA[METHOD OddULINTReturnsFalse
VAR
	result : BOOL;
	value : ULINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('OddULINTReturnsFalse');

// @TEST-FIXTURE
value := ULINT#1;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertFalse(Condition := result,
           Message := 'Odd ULINT did not return FALSE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="OddUSINTReturnsFalse" Id="{d582b2b5-970a-4d48-a8c1-a22a1c25018e}">
      <Declaration><![CDATA[METHOD OddUSINTReturnsFalse
VAR
	result : BOOL;
	value : USINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('OddUSINTReturnsFalse');

// @TEST-FIXTURE
value := USINT#1;

// @TEST-RUN
result := IsValueEven(value);

// @TEST-ASSSERT
AssertFalse(Condition := result,
           Message := 'Odd USINT did not return FALSE');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="IsValueEven_Test">
      <LineId Id="63" Count="0" />
      <LineId Id="99" Count="6" />
      <LineId Id="114" Count="6" />
      <LineId Id="78" Count="0" />
      <LineId Id="121" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.EvenDINTReturnsTrue">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.EvenINTReturnsTrue">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.EvenLINTReturnsTrue">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.EvenSINTReturnsTrue">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.EvenUDINTReturnsTrue">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.EvenUINTReturnsTrue">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.EvenULINTReturnsTrue">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.EvenUSINTReturnsTrue">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.OddDINTReturnsFalse">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.OddINTReturnsFalse">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.OddLINTReturnsFalse">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.OddSINTReturnsFalse">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.OddUDINTReturnsFalse">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.OddUINTReturnsFalse">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.OddULINTReturnsFalse">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="IsValueEven_Test.OddUSINTReturnsFalse">
      <LineId Id="6" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>