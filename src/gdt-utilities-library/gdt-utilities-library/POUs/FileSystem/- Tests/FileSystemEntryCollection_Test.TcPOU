<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FileSystemEntryCollection_Test" Id="{2c9e117c-3f29-4d88-acd3-30a0f57a34d9}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'hide'}
FUNCTION_BLOCK FileSystemEntryCollection_Test EXTENDS TcUnit.FB_TestSuite
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CountReturnsZeroAfterClear();
CountReturnsExpectedAfterInsert();
GetFirstReturnsNullIfEmpty();
GetNextReturnsNullIfEmpty();
GetFirstReturnsExpected();
GetNextReturnsExpected();
]]></ST>
    </Implementation>
    <Method Name="CountReturnsExpectedAfterInsert" Id="{78cd8310-e4e5-4401-aee5-e86d1a558e63}">
      <Declaration><![CDATA[METHOD CountReturnsExpectedAfterInsert
VAR
	expected : INT;
	actual : INT;
	mockFileSystemEntry : Mock_FilesystemEntry('');
	collection : FileSystemEntryCollection;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('CountReturnsExpectedAfterInsert');

// @TEST-FIXTURE
expected := 2;

// @TEST-RUN
collection.Insert(mockFileSystemEntry);
collection.Insert(mockFileSystemEntry);
actual := collection.Count;

// @TEST-ASSSERT
AssertEquals_INT(Expected := expected, Actual := actual, Message := 'Count did not return expected');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="CountReturnsZeroAfterClear" Id="{e625bb33-48a7-4c4e-95a9-9ba35fc2f5a8}">
      <Declaration><![CDATA[METHOD CountReturnsZeroAfterClear
VAR
	expected : INT;
	actual : INT;
	collection : FileSystemEntryCollection;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('CountReturnsZeroAfterClear');

// @TEST-FIXTURE
expected := 0;

// @TEST-RUN
collection.Clear();
actual := collection.Count;

// @TEST-ASSSERT
AssertEquals_INT(Expected := expected, Actual := actual, Message := 'Count did not return zero');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetByIndexReturnsExpected" Id="{88c77a78-6131-4253-92a6-9ac95ffbd296}">
      <Declaration><![CDATA[METHOD GetByIndexReturnsExpected
VAR
	collection : FileSystemEntryCollection;
	mockFileSystemEntry1 : Mock_FilesystemEntry('C:\TestPath_1\');
	mockFileSystemEntry2 : Mock_FilesystemEntry('C:\TestPath_2\');
	entry : I_FileSystemEntry;
	expected : FilePath;
	actual : FilePath;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('GetByIndexReturnsExpected');

// @TEST-FIXTURE
expected := 'C:\TestPath_2\';

// @TEST-RUN
collection.Insert(mockFileSystemEntry1);
collection.Insert(mockFileSystemEntry2);
entry := collection.GetByIndex(1);


actual := entry.Path;

// @TEST-ASSSERT
AssertEquals_STRING(Expected := expected, Actual := actual, Message := 'Did not return expected');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetByIndexReturnsNullIfEmpty" Id="{c3de5e3a-10a6-4e78-ab45-5eb4e12732b1}">
      <Declaration><![CDATA[METHOD GetByIndexReturnsNullIfEmpty
VAR
	result : BOOL;
	collection : FileSystemEntryCollection;
	entry : I_FileSystemEntry;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('GetByIndexReturnsNullIfEmpty');

// @TEST-FIXTURE

// @TEST-RUN
collection.Clear();
entry := collection.GetByIndex(0);
result := entry.IsNull;

// @TEST-ASSSERT
AssertTrue(Condition := result, Message := 'Did not return a null entry');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetByIndexReturnsNullIfIndexOutOfRange" Id="{50318e51-651f-4eed-8cca-fcf06a57fd5d}">
      <Declaration><![CDATA[METHOD GetByIndexReturnsNullIfIndexOutOfRange
VAR
	result1 : BOOL;
	result2 : BOOL;
	collection : FileSystemEntryCollection;
	entry1 : I_FileSystemEntry;
	entry2 : I_FileSystemEntry;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('GetByIndexReturnsNullIfIndexOutOfRange');

// @TEST-FIXTURE

// @TEST-RUN
collection.Clear();
entry1 := collection.GetByIndex(-1);
entry2 := collection.GetByIndex(100);
result1 := entry1.IsNull;
result2 := entry2.IsNull;


// @TEST-ASSSERT
AssertTrue(Condition := result1, Message := 'Did not return a null entry');
AssertTrue(Condition := result2, Message := 'Did not return a null entry');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetFirstReturnsExpected" Id="{c49a26a0-04bc-4fc3-bbc7-9450dfbba9db}">
      <Declaration><![CDATA[METHOD GetFirstReturnsExpected
VAR
	collection : FileSystemEntryCollection;
	mockFileSystemEntry : Mock_FilesystemEntry('C:\TestPath\');
	entry : I_FileSystemEntry;
	expected : FilePath;
	actual : FilePath;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('GetFirstReturnsExpected');

// @TEST-FIXTURE
expected := 'C:\TestPath\';

// @TEST-RUN
collection.Insert(mockFileSystemEntry);
entry := collection.GetFirst();

actual := entry.Path;

// @TEST-ASSSERT
AssertEquals_STRING(Expected := expected, Actual := actual, Message := 'Did not return expected');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetFirstReturnsNullIfEmpty" Id="{c8f80720-ad8a-4597-952d-b8ba38004345}">
      <Declaration><![CDATA[METHOD GetFirstReturnsNullIfEmpty
VAR
	result : BOOL;
	collection : FileSystemEntryCollection;
	entry : I_FileSystemEntry;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('GetFirstReturnsNullIfEmpty');

// @TEST-FIXTURE

// @TEST-RUN
collection.Clear();
entry := collection.GetFirst();
result := entry.IsNull;

// @TEST-ASSSERT
AssertTrue(Condition := result, Message := 'Did not return a null entry');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetNextReturnsExpected" Id="{587a45c8-c3f7-4bfc-ad57-3491a6be1142}">
      <Declaration><![CDATA[METHOD GetNextReturnsExpected
VAR
	collection : FileSystemEntryCollection;
	mockFileSystemEntry1 : Mock_FilesystemEntry('C:\TestPath_1\');
	mockFileSystemEntry2 : Mock_FilesystemEntry('C:\TestPath_2\');
	entry : I_FileSystemEntry;
	expected : FilePath;
	actual : FilePath;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('GetNextReturnsExpected');

// @TEST-FIXTURE
expected := 'C:\TestPath_2\';

// @TEST-RUN
collection.Insert(mockFileSystemEntry1);
collection.Insert(mockFileSystemEntry2);
entry := collection.GetFirst();
entry := collection.GetNext(entry);

actual := entry.Path;

// @TEST-ASSSERT
AssertEquals_STRING(Expected := expected, Actual := actual, Message := 'Did not return expected');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetNextReturnsNullIfEmpty" Id="{7a3fe986-d18b-46ab-943f-d09713213fa5}">
      <Declaration><![CDATA[METHOD GetNextReturnsNullIfEmpty
VAR
	result : BOOL;
	collection : FileSystemEntryCollection;
	entry : I_FileSystemEntry;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('GetNextReturnsNullIfEmpty');

// @TEST-FIXTURE

// @TEST-RUN
collection.Clear();
entry := collection.GetNext(0);
result := entry.IsNull;

// @TEST-ASSSERT
AssertTrue(Condition := result, Message := 'Did not return a null entry');

TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FileSystemEntryCollection_Test">
      <LineId Id="152" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="156" Count="1" />
      <LineId Id="153" Count="0" />
      <LineId Id="159" Count="0" />
      <LineId Id="158" Count="0" />
    </LineIds>
    <LineIds Name="FileSystemEntryCollection_Test.CountReturnsExpectedAfterInsert">
      <LineId Id="129" Count="0" />
      <LineId Id="146" Count="2" />
      <LineId Id="197" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="135" Count="2" />
      <LineId Id="139" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="FileSystemEntryCollection_Test.CountReturnsZeroAfterClear">
      <LineId Id="129" Count="0" />
      <LineId Id="146" Count="2" />
      <LineId Id="188" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="135" Count="2" />
      <LineId Id="139" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="FileSystemEntryCollection_Test.GetByIndexReturnsExpected">
      <LineId Id="129" Count="0" />
      <LineId Id="146" Count="2" />
      <LineId Id="207" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="219" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="135" Count="1" />
      <LineId Id="139" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="FileSystemEntryCollection_Test.GetByIndexReturnsNullIfEmpty">
      <LineId Id="129" Count="0" />
      <LineId Id="146" Count="3" />
      <LineId Id="182" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="135" Count="2" />
      <LineId Id="139" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="FileSystemEntryCollection_Test.GetByIndexReturnsNullIfIndexOutOfRange">
      <LineId Id="129" Count="0" />
      <LineId Id="146" Count="3" />
      <LineId Id="182" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="135" Count="2" />
      <LineId Id="216" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="FileSystemEntryCollection_Test.GetFirstReturnsExpected">
      <LineId Id="129" Count="0" />
      <LineId Id="146" Count="2" />
      <LineId Id="207" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="135" Count="1" />
      <LineId Id="139" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="FileSystemEntryCollection_Test.GetFirstReturnsNullIfEmpty">
      <LineId Id="129" Count="0" />
      <LineId Id="146" Count="3" />
      <LineId Id="182" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="135" Count="2" />
      <LineId Id="139" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="FileSystemEntryCollection_Test.GetNextReturnsExpected">
      <LineId Id="129" Count="0" />
      <LineId Id="146" Count="2" />
      <LineId Id="207" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="219" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="135" Count="1" />
      <LineId Id="139" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
    <LineIds Name="FileSystemEntryCollection_Test.GetNextReturnsNullIfEmpty">
      <LineId Id="129" Count="0" />
      <LineId Id="146" Count="3" />
      <LineId Id="182" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="135" Count="2" />
      <LineId Id="139" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="120" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>